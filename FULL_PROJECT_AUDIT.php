<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>üîç –ü–û–õ–ù–´–ô –ê–£–î–ò–¢ –ü–†–û–ï–ö–¢–ê</h1>";

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤
echo "<h2>1. –°–¢–†–£–ö–¢–£–†–ê –§–ê–ô–õ–û–í</h2>";
$requiredFiles = [
    'install.php' => '–£—Å—Ç–∞–Ω–æ–≤—â–∏–∫',
    'public/index.php' => '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
    'admin/index.php' => '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å',
    'api/auth.php' => 'API –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
    'api/bookings.php' => 'API –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π',
    'includes/Auth.php' => '–ö–ª–∞—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏',
    'includes/Database.php' => '–ö–ª–∞—Å—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
    'includes/functions.php' => '–§—É–Ω–∫—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã',
    'config/database.php' => '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–î',
    'database/schema.sql' => '–°—Ö–µ–º–∞ –ë–î',
    'documents/env.example' => '–ü—Ä–∏–º–µ—Ä .env'
];

foreach ($requiredFiles as $file => $description) {
    if (file_exists($file)) {
        echo "‚úÖ $description ($file)<br>";
    } else {
        echo "‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢: $description ($file)<br>";
    }
}

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
echo "<h2>2. PHP –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–¨</h2>";
echo "PHP –≤–µ—Ä—Å–∏—è: " . PHP_VERSION . "<br>";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
$problematicFiles = [];
$searchPatterns = [
    'password_hash' => '–ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ PHP < 5.5',
    'password_verify' => '–ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ PHP < 5.5',
    '??' => '–ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ PHP < 7.0',
    '?->' => '–ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ PHP < 8.0',
    'match' => '–ù–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ PHP < 8.0'
];

foreach ($searchPatterns as $pattern => $description) {
    echo "<h3>–ü–æ–∏—Å–∫: $pattern ($description)</h3>";
    
    $files = glob('*.php');
    $files = array_merge($files, glob('*/*.php'));
    $files = array_merge($files, glob('*/*/*.php'));
    
    foreach ($files as $file) {
        if (file_exists($file)) {
            $content = file_get_contents($file);
            if (strpos($content, $pattern) !== false) {
                echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω –≤: $file<br>";
                $problematicFiles[$file][] = $description;
            }
        }
    }
}

// 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ë–î
echo "<h2>3. –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–î</h2>";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º database.php
if (file_exists('config/database.php')) {
    $content = file_get_contents('config/database.php');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ $_ENV
    if (strpos($content, '$_ENV') !== false) {
        echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç \$_ENV –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏<br>";
    } else {
        echo "‚ùå –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç \$_ENV<br>";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
    if (strpos($content, 'PDO::ERRMODE_EXCEPTION') !== false) {
        echo "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ PDO<br>";
    } else {
        echo "‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ PDO<br>";
    }
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Auth.php
echo "<h2>4. –ü–†–û–í–ï–†–ö–ê AUTH.PHP</h2>";
if (file_exists('includes/Auth.php')) {
    $content = file_get_contents('includes/Auth.php');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è –ë–î
    $dbFields = [
        'password_hash' => '–î–æ–ª–∂–Ω–æ –±—ã—Ç—å password',
        'first_name' => '–î–æ–ª–∂–Ω–æ –±—ã—Ç—å full_name',
        'last_name' => '–î–æ–ª–∂–Ω–æ –±—ã—Ç—å full_name',
        'is_paid_client' => '–ú–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ë–î',
        'email_verified' => '–ú–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ë–î'
    ];
    
    foreach ($dbFields as $field => $issue) {
        if (strpos($content, $field) !== false) {
            echo "‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: $field - $issue<br>";
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã
    $methods = ['login', 'register', 'logout', 'isLoggedIn', 'isAdmin'];
    foreach ($methods as $method) {
        if (strpos($content, "function $method") !== false || strpos($content, "public function $method") !== false) {
            echo "‚úÖ –ú–µ—Ç–æ–¥ $method —Å—É—â–µ—Å—Ç–≤—É–µ—Ç<br>";
        } else {
            echo "‚ùå –ú–µ—Ç–æ–¥ $method –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç<br>";
        }
    }
}

// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints
echo "<h2>5. –ü–†–û–í–ï–†–ö–ê API ENDPOINTS</h2>";
$apiFiles = glob('api/*.php');
foreach ($apiFiles as $file) {
    $filename = basename($file);
    echo "<h3>$filename</h3>";
    
    $content = file_get_contents($file);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    if (strpos($content, 'Content-Type: application/json') !== false) {
        echo "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ JSON<br>";
    } else {
        echo "‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ï –∑–∞–≥–æ–ª–æ–≤–∫–∏<br>";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫
    if (strpos($content, 'try {') !== false && strpos($content, 'catch') !== false) {
        echo "‚úÖ –ï—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫<br>";
    } else {
        echo "‚ùå –ù–ï–¢ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫<br>";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º CSRF –∑–∞—â–∏—Ç—É
    if (strpos($content, 'csrf') !== false || strpos($content, 'CSRF') !== false) {
        echo "‚úÖ –ï—Å—Ç—å CSRF –∑–∞—â–∏—Ç–∞<br>";
    } else {
        echo "‚ö†Ô∏è –ù–ï–¢ CSRF –∑–∞—â–∏—Ç—ã<br>";
    }
}

// 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
echo "<h2>6. –ü–†–û–í–ï–†–ö–ê –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò</h2>";
$adminFiles = glob('admin/*.php');
foreach ($adminFiles as $file) {
    $filename = basename($file);
    echo "<h3>$filename</h3>";
    
    $content = file_get_contents($file);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (strpos($content, 'isAdmin()') !== false || strpos($content, 'isLoggedIn()') !== false) {
        echo "‚úÖ –ï—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏<br>";
    } else {
        echo "‚ùå –ù–ï–¢ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏<br>";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if (strpos($content, 'header(') !== false) {
        echo "‚úÖ –ï—Å—Ç—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è<br>";
    } else {
        echo "‚ö†Ô∏è –ù–ï–¢ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π<br>";
    }
}

// 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ public —Å–µ–∫—Ü–∏–∏
echo "<h2>7. –ü–†–û–í–ï–†–ö–ê PUBLIC –°–ï–ö–¶–ò–ò</h2>";
$publicFiles = glob('public/*.php');
foreach ($publicFiles as $file) {
    $filename = basename($file);
    echo "<h3>$filename</h3>";
    
    $content = file_get_contents($file);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º Bootstrap
    if (strpos($content, 'bootstrap') !== false) {
        echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Bootstrap<br>";
    } else {
        echo "‚ö†Ô∏è –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Bootstrap<br>";
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º JavaScript
    if (strpos($content, '<script') !== false) {
        echo "‚úÖ –ï—Å—Ç—å JavaScript<br>";
    } else {
        echo "‚ö†Ô∏è –ù–ï–¢ JavaScript<br>";
    }
}

// 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ .htaccess
echo "<h2>8. –ü–†–û–í–ï–†–ö–ê .HTACCESS</h2>";
if (file_exists('.htaccess')) {
    echo "‚úÖ .htaccess —Å—É—â–µ—Å—Ç–≤—É–µ—Ç<br>";
    $content = file_get_contents('.htaccess');
    
    if (strpos($content, 'RewriteEngine') !== false) {
        echo "‚úÖ URL rewriting –≤–∫–ª—é—á–µ–Ω<br>";
    } else {
        echo "‚ùå URL rewriting –ù–ï –≤–∫–ª—é—á–µ–Ω<br>";
    }
} else {
    echo "‚ùå .htaccess –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç<br>";
}

// 9. –ü—Ä–æ–≤–µ—Ä–∫–∞ composer
echo "<h2>9. –ü–†–û–í–ï–†–ö–ê COMPOSER</h2>";
if (file_exists('composer.json')) {
    echo "‚úÖ composer.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç<br>";
    $content = file_get_contents('composer.json');
    $data = json_decode($content, true);
    
    if (isset($data['require'])) {
        echo "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:<br>";
        foreach ($data['require'] as $package => $version) {
            echo "- $package: $version<br>";
        }
    }
} else {
    echo "‚ùå composer.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç<br>";
}

// 10. –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º
echo "<h2>10. –ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê –ü–†–û–ë–õ–ï–ú</h2>";

if (!empty($problematicFiles)) {
    echo "<h3 style='color: red;'>üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:</h3>";
    foreach ($problematicFiles as $file => $problems) {
        echo "<strong>$file:</strong><br>";
        foreach ($problems as $problem) {
            echo "- $problem<br>";
        }
        echo "<br>";
    }
} else {
    echo "<h3 style='color: green;'>‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>";
}

echo "<h3>üìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –°–ï–†–í–ï–†–ê:</h3>";
echo "<ul>";
echo "<li>–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ PHP –≤–µ—Ä—Å–∏—è >= 7.4</li>";
echo "<li>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è (PDO, MySQL, CURL, JSON)</li>";
echo "<li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º (755 –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π, 644 –¥–ª—è —Ñ–∞–π–ª–æ–≤)</li>";
echo "<li>–°–æ–∑–¥–∞–π—Ç–µ .htaccess –¥–ª—è URL rewriting</li>";
echo "<li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö MySQL</li>";
echo "<li>–ó–∞–ø—É—Å—Ç–∏—Ç–µ install.php –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã</li>";
echo "</ul>";

echo "<h1 style='color: green;'>üéâ –ê–£–î–ò–¢ –ó–ê–í–ï–†–®–ï–ù!</h1>";
?>
