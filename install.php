<?php

/**
 * –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º—ã Book Smeta
 */

error_reporting(E_ALL);
ini_set('display_errors', 1);

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Book Smeta</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0">
                            <i class="fas fa-cog me-2"></i>
                            –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Book Smeta
                        </h3>
                    </div>
                    <div class="card-body">
                        
                        <?php
                        
                        $step = $_GET['step'] ?? 1;
                        $errors = [];
                        $success = [];
                        
                        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
                        if ($step == 1) {
                            echo '<h4>–®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π</h4>';
                            
                            // –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP –≤–µ—Ä—Å–∏–∏
                            if (version_compare(PHP_VERSION, '7.4.0') >= 0) {
                                echo '<div class="alert alert-success">‚úì PHP –≤–µ—Ä—Å–∏—è: ' . PHP_VERSION . '</div>';
                            } else {
                                echo '<div class="alert alert-danger">‚úó PHP –≤–µ—Ä—Å–∏—è ' . PHP_VERSION . ' (—Ç—Ä–µ–±—É–µ—Ç—Å—è 7.4+)</div>';
                                $errors[] = '–ù–µ–≤–µ—Ä–Ω–∞—è –≤–µ—Ä—Å–∏—è PHP';
                            }
                            
                            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
                            $requiredExtensions = ['pdo', 'pdo_mysql', 'curl', 'json', 'openssl'];
                            foreach ($requiredExtensions as $ext) {
                                if (extension_loaded($ext)) {
                                    echo '<div class="alert alert-success">‚úì –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ ' . $ext . ' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</div>';
                                } else {
                                    echo '<div class="alert alert-danger">‚úó –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ ' . $ext . ' –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</div>';
                                    $errors[] = '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: ' . $ext;
                                }
                            }
                            
                            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å
                            $writableDirs = ['logs', 'config'];
                            foreach ($writableDirs as $dir) {
                                if (is_writable($dir)) {
                                    echo '<div class="alert alert-success">‚úì –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ' . $dir . ' –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏</div>';
                                } else {
                                    echo '<div class="alert alert-warning">‚ö† –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ' . $dir . ' –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏</div>';
                                    $errors[] = '–ù–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ' . $dir;
                                }
                            }
                            
                            if (empty($errors)) {
                                echo '<div class="alert alert-success"><strong>–í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!</strong></div>';
                                echo '<a href="?step=2" class="btn btn-primary">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</a>';
                            } else {
                                echo '<div class="alert alert-danger"><strong>–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º</strong></div>';
                            }
                        }
                        
                        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
                        if ($step == 2) {
                            echo '<h4>–®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</h4>';
                            
                            if ($_POST) {
                                echo '<div class="alert alert-info"><h5>üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –£–°–¢–ê–ù–û–í–ö–ò</h5></div>';
                                
                                $dbHost = $_POST['db_host'] ?? 'localhost';
                                $dbName = $_POST['db_name'] ?? 'book_smeta';
                                $dbUser = $_POST['db_user'] ?? 'root';
                                $dbPass = $_POST['db_password'] ?? '';
                                
                                echo '<div class="alert alert-secondary">';
                                echo '<h6>–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</h6>';
                                echo '–•–æ—Å—Ç: ' . htmlspecialchars($dbHost) . '<br>';
                                echo '–ë–î: ' . htmlspecialchars($dbName) . '<br>';
                                echo '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ' . htmlspecialchars($dbUser) . '<br>';
                                echo '–ü–∞—Ä–æ–ª—å: ' . (strlen($dbPass) > 0 ? "–£–ö–ê–ó–ê–ù (" . strlen($dbPass) . " —Å–∏–º–≤–æ–ª–æ–≤)" : "–ù–ï –£–ö–ê–ó–ê–ù") . '<br>';
                                echo '</div>';
                                
                                // –®–∞–≥ 1: –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL
                                echo '<div class="alert alert-info">';
                                echo '<h6>–®–∞–≥ 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL</h6>';
                                try {
                                    $pdo = new PDO("mysql:host={$dbHost}", $dbUser, $dbPass);
                                    $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                                    echo '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MySQL —É—Å–ø–µ—à–Ω–æ<br>';
                                    
                                    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ë–î
                                    $stmt = $pdo->query("SHOW DATABASES");
                                    $databases = $stmt->fetchAll(PDO::FETCH_COLUMN);
                                    echo '–î–æ—Å—Ç—É–ø–Ω—ã–µ –ë–î: ' . implode(', ', $databases) . '<br>';
                                    
                                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏
                                    $stmt = $pdo->query("SHOW GRANTS");
                                    $grants = $stmt->fetchAll(PDO::FETCH_COLUMN);
                                    echo '–ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏: ' . implode(', ', $grants) . '<br>';
                                    
                                } catch (PDOException $e) {
                                    echo '‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MySQL: ' . $e->getMessage() . '<br>';
                                    echo '–ö–æ–¥ –æ—à–∏–±–∫–∏: ' . $e->getCode() . '<br>';
                                    echo '</div>';
                                    echo '<div class="alert alert-danger">';
                                    echo '<h6>–í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:</h6>';
                                    echo '1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø–∞–Ω–µ–ª–∏ Beget<br>';
                                    echo '2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –ë–î<br>';
                                    echo '3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ë–î —Å—É—â–µ—Å—Ç–≤—É–µ—Ç<br>';
                                    echo '</div>';
                                    exit;
                                }
                                echo '</div>';
                                
                                // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ë–î
                                echo '<div class="alert alert-info">';
                                echo '<h6>–®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</h6>';
                                
                                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ë–î
                                $stmt = $pdo->query("SHOW DATABASES LIKE '{$dbName}'");
                                if ($stmt->rowCount() > 0) {
                                    echo '‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç<br>';
                                    
                                    try {
                                        $pdo->exec("USE `{$dbName}`");
                                        echo '‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ë–î —É—Å–ø–µ—à–Ω–æ<br>';
                                        
                                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
                                        $stmt = $pdo->query("SHOW TABLES");
                                        $tables = $stmt->fetchAll(PDO::FETCH_COLUMN);
                                        echo '–¢–∞–±–ª–∏—Ü –≤ –ë–î: ' . count($tables) . '<br>';
                                        if (count($tables) > 0) {
                                            echo '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã: ' . implode(', ', $tables) . '<br>';
                                        }
                                        
                                    } catch (PDOException $e) {
                                        echo '‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –ë–î: ' . $e->getMessage() . '<br>';
                                        echo '</div>';
                                        exit;
                                    }
                                } else {
                                    echo '‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç<br>';
                                    echo '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ë–î<br>';
                                    echo '–°–æ–∑–¥–∞–π—Ç–µ –ë–î –≤ –ø–∞–Ω–µ–ª–∏ Beget<br>';
                                    echo '</div>';
                                    exit;
                                }
                                echo '</div>';
                                
                                // –®–∞–≥ 3: –ò–º–ø–æ—Ä—Ç —Å—Ö–µ–º—ã
                                echo '<div class="alert alert-info">';
                                echo '<h6>–®–∞–≥ 3: –ò–º–ø–æ—Ä—Ç —Å—Ö–µ–º—ã –ë–î</h6>';
                                if (file_exists('database/schema.sql')) {
                                    echo '‚úÖ –§–∞–π–ª schema.sql –Ω–∞–π–¥–µ–Ω<br>';
                                    $schema = file_get_contents('database/schema.sql');
                                    echo '–†–∞–∑–º–µ—Ä —Å—Ö–µ–º—ã: ' . strlen($schema) . ' —Å–∏–º–≤–æ–ª–æ–≤<br>';
                                    
                                    // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å—Ö–µ–º—ã
                                    $schema = preg_replace('/CREATE DATABASE.*?;/i', '', $schema);
                                    $schema = preg_replace('/USE\s+\w+.*?;/i', '', $schema);
                                    $schema = preg_replace('/--.*$/m', '', $schema); // –£–±–∏—Ä–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
                                    $schema = preg_replace('/^\s*$/m', '', $schema); // –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                                    echo '–°—Ö–µ–º–∞ –æ—á–∏—â–µ–Ω–∞ –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∫–æ–º–∞–Ω–¥<br>';
                                    
                                    try {
                                        // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –æ–¥–Ω–æ–π
                                        $commands = explode(';', $schema);
                                        $executed = 0;
                                        foreach ($commands as $command) {
                                            $command = trim($command);
                                            if (!empty($command)) {
                                                $pdo->exec($command);
                                                $executed++;
                                            }
                                        }
                                        echo "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–æ–º–∞–Ω–¥: $executed<br>";
                                        
                                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞
                                        $stmt = $pdo->query("SHOW TABLES");
                                        $tables = $stmt->fetchAll(PDO::FETCH_COLUMN);
                                        echo '–¢–∞–±–ª–∏—Ü –ø–æ—Å–ª–µ –∏–º–ø–æ—Ä—Ç–∞: ' . count($tables) . '<br>';
                                        if (count($tables) > 0) {
                                            echo '–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: ' . implode(', ', $tables) . '<br>';
                                        }
                                        
                                    } catch (PDOException $e) {
                                        echo '‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã: ' . $e->getMessage() . '<br>';
                                        echo '–ö–æ–¥ –æ—à–∏–±–∫–∏: ' . $e->getCode() . '<br>';
                                        echo '–ö–æ–º–∞–Ω–¥–∞: ' . htmlspecialchars(substr($command, 0, 100)) . '<br>';
                                        echo '</div>';
                                        exit;
                                    }
                                } else {
                                    echo '‚ùå –§–∞–π–ª database/schema.sql –Ω–µ –Ω–∞–π–¥–µ–Ω<br>';
                                    echo '</div>';
                                    exit;
                                }
                                echo '</div>';
                                
                                // –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
                                echo '<div class="alert alert-info">';
                                echo '<h6>–®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏</h6>';
                                if (file_exists('documents/env.example')) {
                                    echo '‚úÖ –§–∞–π–ª env.example –Ω–∞–π–¥–µ–Ω<br>';
                                    
                                    try {
                                        $envContent = file_get_contents('documents/env.example');
                                        $envContent = str_replace('DB_HOST=localhost', "DB_HOST={$dbHost}", $envContent);
                                        $envContent = str_replace('DB_NAME=book_smeta', "DB_NAME={$dbName}", $envContent);
                                        $envContent = str_replace('DB_USER=root', "DB_USER={$dbUser}", $envContent);
                                        $envContent = str_replace('DB_PASSWORD=', "DB_PASSWORD={$dbPass}", $envContent);
                                        
                                        file_put_contents('.env', $envContent);
                                        echo '‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω<br>';
                                        
                                        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env
                                        $envCheck = file_get_contents('.env');
                                        if (strpos($envCheck, "DB_HOST={$dbHost}") !== false) {
                                            echo '‚úÖ DB_HOST –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω<br>';
                                        }
                                        if (strpos($envCheck, "DB_NAME={$dbName}") !== false) {
                                            echo '‚úÖ DB_NAME –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω<br>';
                                        }
                                        
                                    } catch (Exception $e) {
                                        echo '‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .env: ' . $e->getMessage() . '<br>';
                                        echo '</div>';
                                        exit;
                                    }
                                } else {
                                    echo '‚ùå –§–∞–π–ª documents/env.example –Ω–µ –Ω–∞–π–¥–µ–Ω<br>';
                                    echo '</div>';
                                    exit;
                                }
                                echo '</div>';
                                
                                // –£—Å–ø–µ—Ö
                                echo '<div class="alert alert-success">';
                                echo '<h5>üéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ù–ê–°–¢–†–û–ï–ù–ê –£–°–ü–ï–®–ù–û!</h5>';
                                echo '<p>–í—Å–µ —à–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –±–µ–∑ –æ—à–∏–±–æ–∫. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.</p>';
                                echo '</div>';
                                
                                echo '<div class="d-grid gap-2">';
                                echo '<a href="?step=3" class="btn btn-success btn-lg">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É</a>';
                                echo '</div>';
                            } else {
                                ?>
                                <form method="POST">
                                    <div class="mb-3">
                                        <label for="db_host" class="form-label">–•–æ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</label>
                                        <input type="text" class="form-control" id="db_host" name="db_host" value="localhost" required>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="db_name" class="form-label">–ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</label>
                                        <input type="text" class="form-control" id="db_name" name="db_name" value="book_smeta" required>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="db_user" class="form-label">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</label>
                                        <input type="text" class="form-control" id="db_user" name="db_user" value="root" required>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="db_password" class="form-label">–ü–∞—Ä–æ–ª—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</label>
                                        <input type="password" class="form-control" id="db_password" name="db_password">
                                    </div>
                                    
                                    <button type="submit" class="btn btn-primary">–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</button>
                                </form>
                                <?php
                            }
                        }
                        
                        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                        if ($step == 3) {
                            echo '<h4>–®–∞–≥ 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h4>';
                            
                            if ($_POST) {
                                $appName = $_POST['app_name'] ?? 'Book Smeta';
                                $appUrl = $_POST['app_url'] ?? 'http://localhost/Book_smeta';
                                $adminEmail = $_POST['admin_email'] ?? 'admin@book-smeta.com';
                                $adminPassword = $_POST['admin_password'] ?? '';
                                $getcourseAccount = $_POST['getcourse_account'] ?? '';
                                $getcourseKey = $_POST['getcourse_key'] ?? '';
                                
                                // –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª
                                $envContent = file_get_contents('.env');
                                $envContent = str_replace('APP_NAME="Book Smeta"', "APP_NAME=\"{$appName}\"", $envContent);
                                $envContent = str_replace('APP_URL=http://localhost/Book_smeta', "APP_URL={$appUrl}", $envContent);
                                $envContent = str_replace('GETCOURSE_ACCOUNT=your_account_name', "GETCOURSE_ACCOUNT={$getcourseAccount}", $envContent);
                                $envContent = str_replace('GETCOURSE_SECRET_KEY=your_secret_key', "GETCOURSE_SECRET_KEY={$getcourseKey}", $envContent);
                                
                                file_put_contents('.env', $envContent);
                                
                                // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                                if (!empty($adminPassword)) {
                                    $db = new PDO("mysql:host={$_POST['db_host']};dbname={$_POST['db_name']}", $_POST['db_user'], $_POST['db_password']);
                                    $hashedPassword = password_hash($adminPassword, PASSWORD_DEFAULT);
                                    $stmt = $db->prepare("UPDATE users SET password_hash = ? WHERE email = ?");
                                    $stmt->execute([$hashedPassword, $adminEmail]);
                                }
                                
                                echo '<div class="alert alert-success">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!</div>';
                                echo '<a href="?step=4" class="btn btn-primary">–ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É</a>';
                                
                            } else {
                                ?>
                                <form method="POST">
                                    <div class="mb-3">
                                        <label for="app_name" class="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</label>
                                        <input type="text" class="form-control" id="app_name" name="app_name" value="Book Smeta" required>
                                    </div>
                                    
                                    <?php
                                    $currentUrl = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on' ? "https" : "http") . "://" . $_SERVER['HTTP_HOST'] . dirname($_SERVER['REQUEST_URI']);
                                    $currentUrl = rtrim($currentUrl, '/');
                                    ?>
                                    <div class="mb-3">
                                        <label for="app_url" class="form-label">URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</label>
                                        <input type="url" class="form-control" id="app_url" name="app_url" value="<?= $currentUrl ?>">
                                        <div class="form-text">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω —Ç–µ–∫—É—â–∏–π URL. –ú–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.</div>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="admin_email" class="form-label">Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</label>
                                        <input type="email" class="form-control" id="admin_email" name="admin_email" value="admin@book-smeta.com" required>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="admin_password" class="form-label">–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</label>
                                        <input type="password" class="form-control" id="admin_password" name="admin_password" required>
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="getcourse_account" class="form-label">–ê–∫–∫–∞—É–Ω—Ç GetCourse</label>
                                        <input type="text" class="form-control" id="getcourse_account" name="getcourse_account" placeholder="your-account">
                                    </div>
                                    
                                    <div class="mb-3">
                                        <label for="getcourse_key" class="form-label">–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á GetCourse</label>
                                        <input type="password" class="form-control" id="getcourse_key" name="getcourse_key">
                                    </div>
                                    
                                    <input type="hidden" name="db_host" value="<?= $_GET['db_host'] ?? 'localhost' ?>">
                                    <input type="hidden" name="db_name" value="<?= $_GET['db_name'] ?? 'book_smeta' ?>">
                                    <input type="hidden" name="db_user" value="<?= $_GET['db_user'] ?? 'root' ?>">
                                    <input type="hidden" name="db_password" value="<?= $_GET['db_password'] ?? '' ?>">
                                    
                                    <button type="submit" class="btn btn-primary">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</button>
                                </form>
                                <?php
                            }
                        }
                        
                        // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
                        if ($step == 4) {
                            echo '<h4>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</h4>';
                            echo '<div class="alert alert-success">';
                            echo '<h5>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –°–∏—Å—Ç–µ–º–∞ Book Smeta —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.</h5>';
                            echo '<ul>';
                            echo '<li>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞</li>';
                            echo '<li>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã</li>';
                            echo '<li>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω</li>';
                            echo '</ul>';
                            echo '</div>';
                            
                            echo '<div class="alert alert-info">';
                            echo '<h6>–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h6>';
                            echo '<ol>';
                            echo '<li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ cron –∑–∞–¥–∞—á–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏</li>';
                            echo '<li>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ webhook –≤ GetCourse</li>';
                            echo '<li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã</li>';
                            echo '</ol>';
                            echo '</div>';
                            
                            echo '<div class="d-grid gap-2">';
                            echo '<a href="../public/" class="btn btn-success btn-lg">–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–∏—Å—Ç–µ–º–µ</a>';
                            echo '<a href="../admin/" class="btn btn-outline-primary">–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</a>';
                            echo '</div>';
                            
                            echo '<div class="mt-4">';
                            echo '<h6>–í–∞–∂–Ω–æ!</h6>';
                            echo '<p>–£–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª <code>install.php</code> –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.</p>';
                            echo '</div>';
                        }
                        
                        ?>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
